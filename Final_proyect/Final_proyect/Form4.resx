<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>