<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        K5NChQo9c5v/2Q==
</value>
  </data>
</root>